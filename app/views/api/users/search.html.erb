<div class="nav-bar">
  <a href="/#/"><img src="../assets/white-slam-logo.png" alt="" /></a>

  <h1><%= current_user.username %>'s profile</h1>
  <form class="user-search-form" action="/api/users" method="get">
    <input class="user-search-bar" type="text" name="user[username]" value="" placeholder="User search">
  </form>
  <div class="logout-button"> <%= button_to 'Logout', session_url, method: :delete %> </div>
  </div>
</div>
<canvas id="myCanvas">

</canvas>

<ul class="user-search-list">
  <% @users.each do |user| %>
    <li><a href="/#/users/<%= user.id %>"><%= user.username %></a></li>
  <% end %>
</ul>

<script type="text/javascript">


  $(function () {
    Fridgeslam.CURRENT_USER = {
    username: "<%= current_user.username %>",
    id: "<%= current_user.id %>",
    pendingSlams: "<%= current_user.pending_slams.length %>"
    }

    // $('.user-search-form').submit(function (event) {
    //   // event.preventDefault();
    //   // alert()
    // })

    $.ajax({
      url: '/api/dictionary',
      success: function (response) {
        window.dictionary = response;
      }
    });
  });

  $(Fridgeslam.initialize);

</script>
<script type="text/javascript">
(function () {
  if (typeof Circles === "undefined") {
    window.Circles = {};
  }

  var Circle = Circles.Circle = function (centerX, centerY, radius, color, word, font) {
    this.centerX = centerX;
    this.centerY = centerY;
    this.radius = radius;
    this.color = color;
    this.word = word;
    this.font = font;
  };


  Circle.randomCircle = function (maxX, maxY) {

    var font = 'courier';
    var word = dictionary[Math.floor(Math.random() * dictionary.length)];
    var radius = (15 * word.length);
    return new Circle(
      maxX * Math.random(),
      maxY + radius,
      radius,
      Circle.randomColor(),
      word,
      font
    );
  };

  var HEX_DIGITS = "0123456789ABCDEF"
  Circle.randomColor = function () {
    var color = "#";
    for (var i = 0; i < 6; i++) {
      color += HEX_DIGITS[Math.floor((Math.random() * 16))];
    }

    return color;
  };

  Circle.prototype.moveRandom = function (maxX, maxY) {
    var dy = - (Math.random() * 0.1);
    this.centerY = (this.centerY + (dy * this.radius) * 0.2);
  };

  Circle.prototype.render = function (ctx) {
    ctx.fillStyle = this.color;
    ctx.beginPath();

    ctx.arc(
      this.centerX,
      this.centerY,
      this.radius,
      0,
      2 * Math.PI,
      false
    );

    ctx.fill();
    ctx.fillStyle = "white";

    ctx.font = "35px " + this.font;
    ctx.fillText(this.word, this.centerX - (this.word.length * 10), this.centerY + 10)
  };
    var Game = Circles.Game = function (xDim, yDim) {
      this.xDim = xDim;
      this.yDim = yDim;

      this.circles = [];

      window.setInterval((function () {
        this.circles.push(
          Circles.Circle.randomCircle(xDim, yDim, 1)
        );
    }).bind(this), 1000)
    };
    Game.prototype.render = function (ctx) {
      ctx.clearRect(0, 0, this.xDim, this.yDim);

      this.circles.forEach(function (circle) {
        if (circle.centerY < - (circle.radius)) {
          this.circles.splice(this.circles.indexOf(circle), 1);
        }
        circle.render(ctx);
      }.bind(this));
    };

    Game.prototype.moveCircles = function () {
      var game = this;
      this.circles.forEach(function (circle) {
        circle.moveRandom(game.xDim, game.yDim);
      });
    };

    Game.prototype.start = function (canvasEl) {

      var ctx = canvasEl.getContext("2d");

      window.setInterval((function () {
        this.moveCircles();
        this.render(ctx);
      }).bind(this), 1000 / 200);
    };
  })();

  var canvasEl = document.getElementsByTagName("canvas")[0];
  canvasEl.height = window.innerHeight;
  canvasEl.width = window.innerWidth;
  new Circles.Game(
    canvasEl.width,
    canvasEl.height
  ).start(canvasEl);
</script>
